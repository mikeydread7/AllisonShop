http://tutorials.jenkov.com/java-json/jackson-objectmapper.html

https://community.getpostman.com/t/is-it-possible-to-execute-an-external-program-from-postman/5693/2

** Memory ManageMent INFO **
https://dzone.com/articles/java-memory-management
https://backstage.forgerock.com/knowledge/kb/article/a35746010

http://www.developersbook.com/spring/interview-questions/spring-interview-questions-faqs.php

https://dzone.com/articles/java-8-permgen-metaspace

https://www.edureka.co/blog/interview-questions/java-interview-questions/

http://tutorials.jenkov.com/java-concurrency/non-blocking-algorithms.html#blocking-concurrency-algorithms

ReactJs Tutorials - https://www.youtube.com/watch?v=uextYhQGP6k&list=PL55RiY5tL51oyA8euSROLjMFZbXaV7skS&index=2

https://scotch.io/tutorials/getting-to-know-flux-the-react-js-architecture

https://www.typescriptlang.org/play/index.html

REACT JS Tutorila from SCRATCH VIDEOS
=====================================
  https://www.youtube.com/watch?v=JPT3bFIwJYA&list=PL55RiY5tL51oyA8euSROLjMFZbXaV7skS&index=1
>
  https://www.youtube.com/watch?v=5pt_igBTCsI&list=PL55RiY5tL51oyA8euSROLjMFZbXaV7skS&index=17 
  
  Redux Video
  ==============
  https://www.youtube.com/watch?v=YmGm-qwbJdc
  
  CODE
  https://github.com/mschwarzmueller
  
REACT JS ROUTING COOL STUF
===========================
https://www.youtube.com/watch?v=Law7wfdg_ls -- Cool Routing

https://www.youtube.com/watch?v=Bv_5Zv5c-Ts  - JAVASCRIPT




public class SpringBatchAndQuartzApplicationTests {
    final Logger LOGGER = LoggerFactory.getLogger(this.getClass());
    final Map<Integer, String> failureMap = new HashMap<>();
    final Map<String, Map<Integer, String>> testFailureResults = new HashMap<>();

    @Test
    public void contextLoads() {
        List<String> featureNames = Arrays.asList(
				"Document_Success", "Document_Failure",
        		"BinaryDe_Success", "BinaryDelete_Failure",
                "Metadata_Success", "Metadata_Failure"
		);

        featureNames.forEach(featureName-> {
			Random rand = new Random();
			final Integer count = rand.nextInt(5);
            mapTheFeatureIteration(count);
            testFailureResults.put(featureName, failureMap);
        });
        getFailureReport();
    }

    private void mapTheFeatureIteration(final Integer count) {
        for (int iteration = 0; iteration <= count; iteration++) {
            failureMap.put(iteration, "fail");
        }
    }

    private void getFailureReport() {
        testFailureResults.forEach((featureName, featureMap) -> {
            outputTheFailure(featureName, featureMap);
        });
    }

    private void outputTheFailure(final String featureName, final Map<Integer, String> featureMap) {
        featureMap.forEach((key, value) -> {
                    LOGGER.error("{} {} index {}", featureName, key, value);
                }
        );
    }
}


